[
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "John Curtin’s Stats and Coding Notebook",
    "section": "Welcome",
    "text": "Welcome\nThis web book is a collection of John Curtin’s exploration of stats and coding issues. These chapters are mostly for John and not intended for external use though John may occasionally share it with colleagues to stimulate discussion and debate."
  },
  {
    "objectID": "repeated_measures.html#load-packages-and-data",
    "href": "repeated_measures.html#load-packages-and-data",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.1 Load packages and data",
    "text": "1.1 Load packages and data\n\nlibrary(tidyverse)\nlibrary(lme4)\nlibrary(car)\nlibrary(here)\nlibrary(afex)\nlibrary(emmeans)\n# path <- here(\"pilot_partnerchess/mixed_models/sample_data.csv\")"
  },
  {
    "objectID": "repeated_measures.html#long-format-data",
    "href": "repeated_measures.html#long-format-data",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.2 Long format data",
    "text": "1.2 Long format data\n\nd <- read_csv(\"repeated_measures.csv\", col_types = cols()) |> \n  filter(dyad == \"Patient\") |> \n  select(-dyad) |> \n  filter(time > 0) |> \n  glimpse()\n\nRows: 99\nColumns: 4\n$ study_id <dbl> 600, 600, 600, 101, 101, 101, 102, 102, 102, 100, 100, 100, 1…\n$ arm      <chr> \"PartnerCHESS\", \"PartnerCHESS\", \"PartnerCHESS\", \"A-CHESS\", \"A…\n$ time     <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3…\n$ hdd      <dbl> 65.0, 59.5, 42.0, 100.0, 100.0, 100.0, 0.0, 0.0, 0.0, 13.6, 1…\n\nd |> print(n = 20)\n\n# A tibble: 99 × 4\n   study_id arm           time   hdd\n      <dbl> <chr>        <dbl> <dbl>\n 1      600 PartnerCHESS     1  65  \n 2      600 PartnerCHESS     2  59.5\n 3      600 PartnerCHESS     3  42  \n 4      101 A-CHESS          1 100  \n 5      101 A-CHESS          2 100  \n 6      101 A-CHESS          3 100  \n 7      102 PartnerCHESS     1   0  \n 8      102 PartnerCHESS     2   0  \n 9      102 PartnerCHESS     3   0  \n10      100 PartnerCHESS     1  13.6\n11      100 PartnerCHESS     2   1.4\n12      100 PartnerCHESS     3  84.6\n13      106 PartnerCHESS     1  64.4\n14      106 PartnerCHESS     2  41.9\n15      106 PartnerCHESS     3  94.4\n16      104 A-CHESS          1 100  \n17      104 A-CHESS          2   0  \n18      104 A-CHESS          3   0  \n19      105 PartnerCHESS     1  23.8\n20      105 PartnerCHESS     2   0  \n# … with 79 more rows"
  },
  {
    "objectID": "repeated_measures.html#setting-contrasts-for-factors",
    "href": "repeated_measures.html#setting-contrasts-for-factors",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.3 Setting contrasts for factors",
    "text": "1.3 Setting contrasts for factors\n\nsee: https://marissabarlaz.github.io/portfolio/contrastcoding/\ndefault for unordered factors is treatment/dummy\nwe typically want centered orthogonal. Helmert often good choice\nbelow, we demo how to set up contrasts however you like by code\nWe will apply them later as needed\nWe make helmert contrast matrices for 2 and 3 level factors here\n\n\n(helmert2 = matrix(c(-.5, .5), ncol = 1, dimnames = list(c(1,2), c(\"t2v1\"))))\n\n  t2v1\n1 -0.5\n2  0.5\n\n(helmert3 = matrix(c(-2/3, 1/3, 1/3, 0, -.5, .5), ncol = 2, dimnames = list(c(1,2,3), c(\"t32v1\", \"t3v2\"))))\n\n       t32v1 t3v2\n1 -0.6666667  0.0\n2  0.3333333 -0.5\n3  0.3333333  0.5"
  },
  {
    "objectID": "repeated_measures.html#wide-format",
    "href": "repeated_measures.html#wide-format",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.4 Wide format",
    "text": "1.4 Wide format\n\nd_wide <- d |> \n  select(study_id, arm, time, hdd) |> \n  pivot_wider(names_from = time, values_from = hdd) |> \n  rename(time1 = `1`,\n         time2 = `2`, \n         time3 = `3`) |> \n  glimpse()\n\nRows: 33\nColumns: 5\n$ study_id <dbl> 600, 101, 102, 100, 106, 104, 105, 200, 107, 201, 108, 109, 3…\n$ arm      <chr> \"PartnerCHESS\", \"A-CHESS\", \"PartnerCHESS\", \"PartnerCHESS\", \"P…\n$ time1    <dbl> 65.0, 100.0, 0.0, 13.6, 64.4, 100.0, 23.8, 100.0, 4.8, 46.6, …\n$ time2    <dbl> 59.5, 100.0, 0.0, 1.4, 41.9, 0.0, 0.0, 100.0, 0.0, 50.0, 100.…\n$ time3    <dbl> 42.0, 100.0, 0.0, 84.6, 94.4, 0.0, 0.0, 56.1, 0.0, 100.0, 100…\n\nd_wide |> print(n = 20)\n\n# A tibble: 33 × 5\n   study_id arm          time1 time2 time3\n      <dbl> <chr>        <dbl> <dbl> <dbl>\n 1      600 PartnerCHESS  65    59.5  42  \n 2      101 A-CHESS      100   100   100  \n 3      102 PartnerCHESS   0     0     0  \n 4      100 PartnerCHESS  13.6   1.4  84.6\n 5      106 PartnerCHESS  64.4  41.9  94.4\n 6      104 A-CHESS      100     0     0  \n 7      105 PartnerCHESS  23.8   0     0  \n 8      200 PartnerCHESS 100   100    56.1\n 9      107 A-CHESS        4.8   0     0  \n10      201 A-CHESS       46.6  50   100  \n11      108 A-CHESS       98.5 100   100  \n12      109 A-CHESS       22.2  28.6  30.6\n13      300 PartnerCHESS  55.6   0     0  \n14      303 PartnerCHESS   0     0     0  \n15      310 PartnerCHESS  12.9   3.4   0  \n16      402 PartnerCHESS  26.7   0     0  \n17      311 A-CHESS        5.1   0     0  \n18      308 A-CHESS        0     0     0  \n19      304 PartnerCHESS  45     0     0  \n20      400 PartnerCHESS  20.6  40.7   0  \n# … with 13 more rows"
  },
  {
    "objectID": "repeated_measures.html#two-level-repeated-measures-iv",
    "href": "repeated_measures.html#two-level-repeated-measures-iv",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.5 Two level repeated measures IV",
    "text": "1.5 Two level repeated measures IV\n\nUse only time 1 and time 2 to demo two level repeated measures analyses\n\n\n1.5.1 diff score approach\nThis is the standard/traditional way to analyse this design and the benchmark for comparison\n\nTime effect tested using difference score for time2 - time1\nNo assumption of sphericity is needed\n\n\nd_wide |> \n  mutate(diff = time2 - time1) |> \n  lm(diff ~ 1, data = _) |> \n  summary()\n\n\nCall:\nlm(formula = diff ~ 1, data = mutate(d_wide, diff = time2 - time1))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-89.018 -11.518   6.182  10.982  34.582 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  -10.982      3.984  -2.756  0.00958 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 22.89 on 32 degrees of freedom\n\n\nIf you wanted to test the intercept in the between subject model you could do this.\n\nd_wide |> \n  mutate(ave = (time2 + time1) / 2) |> \n  lm(ave ~ 1, data = _) |> \n  summary()\n\n\nCall:\nlm(formula = ave ~ 1, data = mutate(d_wide, ave = (time2 + time1)/2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-31.291 -28.741  -8.791  17.009  68.709 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   31.291      5.724   5.467 5.11e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 32.88 on 32 degrees of freedom\n\n\n\n\n1.5.2 lmer approach without random effect of time and time as manually coded regressor\n\nThis is first option using manually coded regressor for time (time_2v1, 0.5 vs. -0.5)\nUse random intercept but no random slope for time when there are no psuedoreplications (i.e., where there is only one observation per cell)\nUse Anova() from car package\n\nFirst format data for two level example and code regressor.\n\nd2 <- d |> \n  filter(time < 3) |>   \n  mutate(time_2v1 = if_else(time == 1, -.5, .5)) |>\n  glimpse()\n\nRows: 66\nColumns: 5\n$ study_id <dbl> 600, 600, 101, 101, 102, 102, 100, 100, 106, 106, 104, 104, 1…\n$ arm      <chr> \"PartnerCHESS\", \"PartnerCHESS\", \"A-CHESS\", \"A-CHESS\", \"Partne…\n$ time     <dbl> 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1…\n$ hdd      <dbl> 65.0, 59.5, 100.0, 100.0, 0.0, 0.0, 13.6, 1.4, 64.4, 41.9, 10…\n$ time_2v1 <dbl> -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, -0.5, …\n\nd2 |> print(n = 20)\n\n# A tibble: 66 × 5\n   study_id arm           time   hdd time_2v1\n      <dbl> <chr>        <dbl> <dbl>    <dbl>\n 1      600 PartnerCHESS     1  65       -0.5\n 2      600 PartnerCHESS     2  59.5      0.5\n 3      101 A-CHESS          1 100       -0.5\n 4      101 A-CHESS          2 100        0.5\n 5      102 PartnerCHESS     1   0       -0.5\n 6      102 PartnerCHESS     2   0        0.5\n 7      100 PartnerCHESS     1  13.6     -0.5\n 8      100 PartnerCHESS     2   1.4      0.5\n 9      106 PartnerCHESS     1  64.4     -0.5\n10      106 PartnerCHESS     2  41.9      0.5\n11      104 A-CHESS          1 100       -0.5\n12      104 A-CHESS          2   0        0.5\n13      105 PartnerCHESS     1  23.8     -0.5\n14      105 PartnerCHESS     2   0        0.5\n15      200 PartnerCHESS     1 100       -0.5\n16      200 PartnerCHESS     2 100        0.5\n17      107 A-CHESS          1   4.8     -0.5\n18      107 A-CHESS          2   0        0.5\n19      201 A-CHESS          1  46.6     -0.5\n20      201 A-CHESS          2  50        0.5\n# … with 46 more rows\n\n\nThen do analysis.\n\nDo NOT use by subject random slope for time.\nP value for time (and intercept) matches traditional analysis\nboth parameter estimates match above as well\n\n\nm2a <- d2 |> \n  lmer(hdd ~ time_2v1 + (1 | study_id), data = _)\n\nm2a |> \n  Anova(type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 29.8846  1     32 5.109e-06 ***\ntime_2v1     7.5963  1     32  0.009575 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nm2a\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ time_2v1 + (1 | study_id)\n   Data: d2\nREML criterion at convergence: 612.5259\nRandom effects:\n Groups   Name        Std.Dev.\n study_id (Intercept) 30.83   \n Residual             16.19   \nNumber of obs: 66, groups:  study_id, 33\nFixed Effects:\n(Intercept)     time_2v1  \n      31.29       -10.98  \n\n\n\n\n1.5.3 lmer approach without random effect of time and time as factor\n\nNeed to put centered (helmert) contrast on time if you want intercept to match\n\n\nd2 <- d2 |> \n  mutate(time = factor(time, labels = c(\"time1\", \"time2\")))\n\ncontrasts(d2$time)\n\n      time2\ntime1     0\ntime2     1\n\ncontrasts(d2$time) <- helmert2\ncontrasts(d2$time)\n\n      t2v1\ntime1 -0.5\ntime2  0.5\n\n\n\nDo NOT use by subject random slope for time\nCoefficients and p-values match\n\n\nm2b <- d2 |> \n  lmer(hdd ~ time + (1 | study_id), data = _)\n\nm2b |> \n  Anova(type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 29.8846  1     32 5.109e-06 ***\ntime         7.5963  1     32  0.009575 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nm2b\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ time + (1 | study_id)\n   Data: d2\nREML criterion at convergence: 612.5259\nRandom effects:\n Groups   Name        Std.Dev.\n study_id (Intercept) 30.83   \n Residual             16.19   \nNumber of obs: 66, groups:  study_id, 33\nFixed Effects:\n(Intercept)     timet2v1  \n      31.29       -10.98  \n\n\n\n\n1.5.4 lmer approach with random effect of time and time as regressor\n\nNOPE!\n! number of observations (=66) <= number of random effects (=66) for term (1 + c_time | study_id); the random-effects parameters and the residual variance (or scale parameter) are probably unidentifiable\nThis WOULD be correct if we had psudeoreplications\n\n\nd2 |> \n  lmer(hdd ~ c_time + (1 + c_time | study_id), data = _) |> \n  Anova(type = 3, test = \"F\")"
  },
  {
    "objectID": "repeated_measures.html#level-time-variable",
    "href": "repeated_measures.html#level-time-variable",
    "title": "1  Analysis of Repeated Measures in R",
    "section": "1.6 3 level time variable",
    "text": "1.6 3 level time variable\nAdd regressors for helmert contrasts for three level time variable\n\nd <- d |> \n  mutate(time_32v1 = case_match(time,\n                                c(1) ~ -2/3,\n                                c(2, 3) ~ 1/3),\n         time_3v2 = case_match(time, \n                               c(1) ~ 0,\n                               c(2) ~ -.5,\n                               c(3) ~ .5))\n\nd |> print(n = 20)\n\n# A tibble: 99 × 6\n   study_id arm           time   hdd time_32v1 time_3v2\n      <dbl> <chr>        <dbl> <dbl>     <dbl>    <dbl>\n 1      600 PartnerCHESS     1  65      -0.667      0  \n 2      600 PartnerCHESS     2  59.5     0.333     -0.5\n 3      600 PartnerCHESS     3  42       0.333      0.5\n 4      101 A-CHESS          1 100      -0.667      0  \n 5      101 A-CHESS          2 100       0.333     -0.5\n 6      101 A-CHESS          3 100       0.333      0.5\n 7      102 PartnerCHESS     1   0      -0.667      0  \n 8      102 PartnerCHESS     2   0       0.333     -0.5\n 9      102 PartnerCHESS     3   0       0.333      0.5\n10      100 PartnerCHESS     1  13.6    -0.667      0  \n11      100 PartnerCHESS     2   1.4     0.333     -0.5\n12      100 PartnerCHESS     3  84.6     0.333      0.5\n13      106 PartnerCHESS     1  64.4    -0.667      0  \n14      106 PartnerCHESS     2  41.9     0.333     -0.5\n15      106 PartnerCHESS     3  94.4     0.333      0.5\n16      104 A-CHESS          1 100      -0.667      0  \n17      104 A-CHESS          2   0       0.333     -0.5\n18      104 A-CHESS          3   0       0.333      0.5\n19      105 PartnerCHESS     1  23.8    -0.667      0  \n20      105 PartnerCHESS     2   0       0.333     -0.5\n# … with 79 more rows\n\n\nSet up 3-level time as a factor with helmert contrasts\n\nd <- d |> \n  mutate(time = factor(time, labels = c(\"time1\", \"time2\", \"time3\")))\n\ncontrasts(d$time)\n\n      time2 time3\ntime1     0     0\ntime2     1     0\ntime3     0     1\n\ncontrasts(d$time) <- helmert3\ncontrasts(d$time)\n\n           t32v1 t3v2\ntime1 -0.6666667  0.0\ntime2  0.3333333 -0.5\ntime3  0.3333333  0.5\n\n\n\n1.6.1 Using afex::aov_car\nThis provides us with main effect of Time (2 df) with the pooled error term (64 ddf). * This is only appropriate if sphericity assumption is met.\n* Can get corrections to dfs if assumption is violated.\n\nm_afex <- d |> \n  afex::aov_car(hdd ~ time + Error(study_id/time), data = _)\n\nsummary(m_afex)\n\n\nUnivariate Type III Repeated-Measures ANOVA Assuming Sphericity\n\n            Sum Sq num Df Error SS den Df F value    Pr(>F)    \n(Intercept)  87588      1   104463     32 26.8308 1.178e-05 ***\ntime          2463      2    21227     64  3.7136   0.02979 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nMauchly Tests for Sphericity\n\n     Test statistic  p-value\ntime        0.84158 0.069025\n\n\nGreenhouse-Geisser and Huynh-Feldt Corrections\n for Departure from Sphericity\n\n      GG eps Pr(>F[GG])  \ntime 0.86325     0.0366 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        HF eps Pr(>F[HF])\ntime 0.9079611 0.03422039\n\nanova(m_afex, correction = \"none\")\n\nAnova Table (Type 3 tests)\n\nResponse: hdd\n     num Df den Df    MSE      F      ges  Pr(>F)  \ntime      2     64 331.68 3.7136 0.019222 0.02979 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(m_afex, correction = \"GG\")\n\nAnova Table (Type 3 tests)\n\nResponse: hdd\n     num Df den Df    MSE      F      ges Pr(>F)  \ntime 1.7265 55.248 384.22 3.7136 0.019222 0.0366 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nanova(m_afex, correction = \"HF\")\n\nAnova Table (Type 3 tests)\n\nResponse: hdd\n     num Df den Df   MSE      F      ges  Pr(>F)  \ntime 1.8159  58.11 365.3 3.7136 0.019222 0.03422 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe can use emmeans package to get cell means and 1 df contrasts\n\nnote the formula for the mean contrasts it NOT the helmert coefficients, but the actual algebraic formula for the contrasts we want.\nThis ALSO gives use tests of contrasts with SEPARATE, not POOLED error (note ddf = 32)\nWe want separate error because no assumption of sphericity needed\n\n\n(means <- emmeans(m_afex, ~ time))\n\n time  emmean   SE df lower.CL upper.CL\n time1   36.8 5.98 32     24.6     49.0\n time2   25.8 6.14 32     13.3     38.3\n time3   26.7 6.75 32     12.9     40.4\n\nConfidence level used: 0.95 \n\ncontrast(means, list(t32v1 = c(-1, .5, .5), t3v2 = c(0,-1,1))) \n\n contrast estimate   SE df t.ratio p.value\n t32v1     -10.556 4.23 32  -2.495  0.0180\n t3v2        0.852 4.04 32   0.211  0.8344\n\n\n\n\n1.6.2 Diff score approach\nFirst here are the time contrast models.\n\nCRITICALLY, this tests contrasts with SEPARATE (rather than pooled) error. Note ddf = 32 for contrasts\nThis matches contrasts from aov_car()\nThis method does not provide test of main effect of time (2 df)\n\n\nd_wide |> \n  mutate(diff_23v1 = (time2 + time3) / 2 - time1) |> \n  lm(diff_23v1 ~ 1, data = _) |> \n  summary()\n\n\nCall:\nlm(formula = diff_23v1 ~ 1, data = mutate(d_wide, diff_23v1 = (time2 + \n    time3)/2 - time1))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-89.444 -11.394   7.206  10.556  39.956 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  -10.556      4.231  -2.495    0.018 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 24.31 on 32 degrees of freedom\n\nd_wide |>\n  mutate(diff_3v2 = time3 - time2) |> \n  lm(diff_3v2 ~ 1, data = _) |> \n  summary()\n\n\nCall:\nlm(formula = diff_3v2 ~ 1, data = mutate(d_wide, diff_3v2 = time3 - \n    time2))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-44.752  -3.452  -0.852  -0.852  82.348 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)   0.8515     4.0411   0.211    0.834\n\nResidual standard error: 23.21 on 32 degrees of freedom\n\n\nAnd here is the main effects model for the intercept for time\n\nd_wide |> \n  mutate(ave = (time1 + time2 + time3) / 3) |> \n  lm(ave ~ 1, data = _) |> \n  summary()\n\n\nCall:\nlm(formula = ave ~ 1, data = mutate(d_wide, ave = (time1 + time2 + \n    time3)/3))\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-29.74 -28.04 -11.31  10.66  70.26 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   29.744      5.742    5.18 1.18e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 32.99 on 32 degrees of freedom\n\n\n\n\n1.6.3 lmer approach with time as factor\n\nWe do NOT include by subject random slope for time because there are no pseudoreplications\nGets 2df main effect but not contrasts\nMatches main effect results from aov_car()\nBUT not appropriate if sphericity is not met\nAnd you would need to got to aov_car() or similar to test for sphericity and get corrections if needed. NOT A GOOD SOLUTION\n\n\nm3a<- d |> \n  lmer(hdd ~ time + (1 | study_id), data = _)\n\nm3a\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ time + (1 | study_id)\n   Data: d\nREML criterion at convergence: 913.2997\nRandom effects:\n Groups   Name        Std.Dev.\n study_id (Intercept) 31.27   \n Residual             18.21   \nNumber of obs: 99, groups:  study_id, 33\nFixed Effects:\n(Intercept)    timet32v1     timet3v2  \n    29.7444     -10.5561       0.8515  \n\nAnova(m3a, type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 26.8308  1     32 1.178e-05 ***\ntime         3.7136  2     64   0.02979 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# anova(m3a)\n\n\n\n1.6.4 lmer approach with regressors for time\n\nDo NOT include by subject random slope for time because no pseudoreplications\nGets 1 df contrasts for time and values match\nBUT uses a pooled error to test contrasts. ddf = 64. Appropriate (better?) if sphericity holds but definitely not if it doesn’t!\nDoes not get main effect (2df) for time\n\n\nm3b <- d |> \n  lme4::lmer(hdd ~ time_32v1 + time_3v2 + (1 | study_id), data = _)\n\nm3b\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: hdd ~ time_32v1 + time_3v2 + (1 | study_id)\n   Data: d\nREML criterion at convergence: 913.2997\nRandom effects:\n Groups   Name        Std.Dev.\n study_id (Intercept) 31.27   \n Residual             18.21   \nNumber of obs: 99, groups:  study_id, 33\nFixed Effects:\n(Intercept)    time_32v1     time_3v2  \n    29.7444     -10.5561       0.8515  \n\nAnova(m3b, type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 26.8308  1     32 1.178e-05 ***\ntime_32v1    7.3911  1     64  0.008426 ** \ntime_3v2     0.0361  1     64  0.849971    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n1.6.5 lmer approach with regressors for time AND separate error terms\nI dont show code for this but we could aggregate down to long format but just the two levels of time separately for each time contrast and then we would be back to the 2 level lmer approach to time from above. This would be fine but its cumbersome so I dont think this is worth it.\n\n\n1.6.6 With random effect for time\n\nNOPE\n! number of observations (=99) <= number of random effects (=99) for term (1 + time | study_id); the random-effects parameters and the residual variance (or scale parameter) are probably unidentifiable\nAgain, no pseudoreplications so no by-subject random effect for time can be estimated\n\n\nd |> \n  lmer(hdd ~ time + (1 + time | study_id), data = _)\n\n\n\n1.6.7 lmer with time as continuous variable\nNow we can specify by subject random slope for time\nAnd this model doesn’t make sphericity assumption because it allows for the slopes to vary by subject\n\nd <- d |> \n  mutate(r_time = as.numeric(time),\n         c_time = r_time - 2) |> \n  glimpse()\n\nRows: 99\nColumns: 8\n$ study_id  <dbl> 600, 600, 600, 101, 101, 101, 102, 102, 102, 100, 100, 100, …\n$ arm       <chr> \"PartnerCHESS\", \"PartnerCHESS\", \"PartnerCHESS\", \"A-CHESS\", \"…\n$ time      <fct> time1, time2, time3, time1, time2, time3, time1, time2, time…\n$ hdd       <dbl> 65.0, 59.5, 42.0, 100.0, 100.0, 100.0, 0.0, 0.0, 0.0, 13.6, …\n$ time_32v1 <dbl> -0.6666667, 0.3333333, 0.3333333, -0.6666667, 0.3333333, 0.3…\n$ time_3v2  <dbl> 0.0, -0.5, 0.5, 0.0, -0.5, 0.5, 0.0, -0.5, 0.5, 0.0, -0.5, 0…\n$ r_time    <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, …\n$ c_time    <dbl> -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, …\n\n\n\nm_raw <- d |> \n  lmer(hdd ~ r_time + (1 + r_time | study_id), data = _)\n\nm_raw\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ r_time + (1 + r_time | study_id)\n   Data: d\nREML criterion at convergence: 916.1419\nRandom effects:\n Groups   Name        Std.Dev. Corr \n study_id (Intercept) 34.50         \n          r_time      11.10    -0.44\n Residual             14.73         \nNumber of obs: 99, groups:  study_id, 33\nFixed Effects:\n(Intercept)       r_time  \n     39.875       -5.065  \n\nAnova(m_raw, type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 30.9199  1     32 3.887e-06 ***\nr_time       3.6522  1     32   0.06499 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCentering matters - here only for intercept but more impacts with higher order models\n\nm_center <- d |> \n  lmer(hdd ~ c_time + (1 + c_time | study_id), data = _)\n\nm_center\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ c_time + (1 + c_time | study_id)\n   Data: d\nREML criterion at convergence: 916.1419\nRandom effects:\n Groups   Name        Std.Dev. Corr\n study_id (Intercept) 31.87        \n          c_time      11.10    0.22\n Residual             14.73        \nNumber of obs: 99, groups:  study_id, 33\nFixed Effects:\n(Intercept)       c_time  \n     29.744       -5.065  \n\nAnova(m_center, type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 26.8308  1     32 1.178e-05 ***\nc_time       3.6523  1     32   0.06498 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTo fit poly model, you probably want to use centered time because linear effect will be at time = 0 (time mid point). Or chose another sensible 0 point.\n\nd <- d |> \n  mutate(c_time2 = c_time^2) |> \n  glimpse()\n\nRows: 99\nColumns: 9\n$ study_id  <dbl> 600, 600, 600, 101, 101, 101, 102, 102, 102, 100, 100, 100, …\n$ arm       <chr> \"PartnerCHESS\", \"PartnerCHESS\", \"PartnerCHESS\", \"A-CHESS\", \"…\n$ time      <fct> time1, time2, time3, time1, time2, time3, time1, time2, time…\n$ hdd       <dbl> 65.0, 59.5, 42.0, 100.0, 100.0, 100.0, 0.0, 0.0, 0.0, 13.6, …\n$ time_32v1 <dbl> -0.6666667, 0.3333333, 0.3333333, -0.6666667, 0.3333333, 0.3…\n$ time_3v2  <dbl> 0.0, -0.5, 0.5, 0.0, -0.5, 0.5, 0.0, -0.5, 0.5, 0.0, -0.5, 0…\n$ r_time    <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, …\n$ c_time    <dbl> -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, …\n$ c_time2   <dbl> 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, …\n\n\nBut you can’t fit poly model with quadratic effect with random slopes because, once again cant estimate intercept and both random slopes without more observations per subject\nError: number of observations (=99) <= number of random effects (=99) for term (1 + c_time + c_time2 | study_id); the random-effects parameters and the residual variance (or scale parameter) are probably unidentifiable\n\nm_poly <- d |> \n  lmer(hdd ~ c_time + c_time2 + (1 + c_time + c_time2 | study_id), data = _)\n\nBut you CAN return to not estimating by subject random slopes. I suspect that this has the same sphericity issue though!\n\nm_poly <- d |> \n  lmer(hdd ~ c_time + c_time2 + (1 | study_id), data = _)\n\nm_poly\n\nLinear mixed model fit by REML ['lmerModLmerTest']\nFormula: hdd ~ c_time + c_time2 + (1 | study_id)\n   Data: d\nREML criterion at convergence: 914.686\nRandom effects:\n Groups   Name        Std.Dev.\n study_id (Intercept) 31.27   \n Residual             18.21   \nNumber of obs: 99, groups:  study_id, 33\nFixed Effects:\n(Intercept)       c_time      c_time2  \n     25.800       -5.065        5.917  \n\nAnova(m_poly, type = 3, test = \"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: hdd\n                  F Df Df.res    Pr(>F)    \n(Intercept) 16.7773  1 45.389 0.0001711 ***\nc_time       5.1052  1 64.000 0.0272672 *  \nc_time2      2.3220  1 64.000 0.1324835    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  }
]